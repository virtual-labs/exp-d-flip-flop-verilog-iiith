[
  {
    "question": "1. Does the order of input and output ports in the argument of module matters?",
    "answers": {
      "a": "Yes",
      "b": "No",
      "c": "May matter in some situation",
      "d": "May not matter in some situation"
    },
    "correctAnswer": "a",
    "explanations": {
      "a": "Correct. The order of input and output ports in the module declaration determines how connections are made during instantiation.",
      "b": "Incorrect. Ignoring the order can lead to incorrect connections and unexpected behavior.",
      "c": "Incorrect. The order always matters, not just in some situations.",
      "d": "Incorrect. The order always matters, not just in some situations."
    },
    "difficulty": "intermediate"
  },
  {
    "question": "2. Which of the following loops are supported by verilog?",
    "answers": {
      "a": "If-else loop",
      "b": "For loop",
      "c": "While loop",
      "d": "All of these"
    },
    "correctAnswer": "d",
    "explanations": {
      "a": "Incorrect. If-else is a conditional statement, not a loop construct in Verilog.",
      "b": "Correct. Verilog supports the for loop for iteration.",
      "c": "Correct. Verilog supports the while loop for repeated execution.",
      "d": "Correct. Verilog supports for, while, and conditional constructs for control flow."
    },
    "difficulty": "beginner"
  },
  {
    "question": "3. What defines the beginning and end of a loop",
    "answers": {
      "a": "Begin----end",
      "b": "Curly brackets ()",
      "c": "None of these",
      "d": "Both of them"
    },
    "correctAnswer": "a",
    "explanations": {
      "a": "Correct. 'begin' and 'end' are used to define the boundaries of procedural blocks, including loops, in Verilog.",
      "b": "Incorrect. Curly brackets are not used for loop boundaries in Verilog; they are used for concatenation.",
      "c": "Incorrect. There is a specific construct ('begin'/'end') for loop boundaries.",
      "d": "Incorrect. Only 'begin' and 'end' are used for this purpose."
    },
    "difficulty": "beginner"
  },
  {
    "question": "4. What defines high impedance state or floating state in verilog?",
    "answers": {
      "a": "1",
      "b": "X",
      "c": "Z",
      "d": "Both X and Z"
    },
    "correctAnswer": "c",
    "explanations": {
      "a": "Incorrect. '1' represents logic high, not high impedance.",
      "b": "Incorrect. 'X' represents unknown or uninitialized state, not high impedance.",
      "c": "Correct. 'Z' is used to represent high impedance or floating state in Verilog.",
      "d": "Incorrect. Only 'Z' represents high impedance; 'X' does not."
    },
    "difficulty": "intermediate"
  },
  {
    "question": " 5. In the following figure A is input and B is output of inverter and C is clock. Tell whether inverter is working synchronously or asynchronously? <img src='images/syn.jpg'>",
    "answers": {
      "a": "Asynchronous",
      "b": "Synchronous",
      "c": "Unpredictable",
      "d": "Sometimes synchronous and sometimes asynchronous"
    },
    "correctAnswer": "b",
    "explanations": {
      "a": "Incorrect. The inverter is controlled by the clock, so it is not asynchronous.",
      "b": "Correct. The inverter operates synchronously as it is triggered by the clock signal.",
      "c": "Incorrect. The operation is defined by the clock, not unpredictable.",
      "d": "Incorrect. The inverter does not switch between synchronous and asynchronous operation."
    },
    "difficulty": "advanced"
  },
  {
    "question": "6. In the above figure, tell whether inverter is working on positive edge or negative edge of clock? <img src='images/syn.jpg'>",
    "answers": {
      "a": "Negative edge",
      "b": "Positive edge",
      "c": "Both on positive edge and negative edge",
      "d": "Middle of positive and negative edge of clock"
    },
    "correctAnswer": "b",
    "explanations": {
      "a": "Incorrect. The inverter is triggered on the positive edge, not the negative edge, of the clock.",
      "b": "Correct. The inverter operates on the positive edge of the clock signal.",
      "c": "Incorrect. It does not operate on both edges of the clock.",
      "d": "Incorrect. It does not operate in the middle of clock edges."
    },
    "difficulty": "advanced"
  },
  {
    "question": "7. In the following figure tell whether reset is synchronous or asynchronous? <img src='images/asyn.jpg'>",
    "answers": {
      "a": "Asynchronous",
      "b": "Synchronous",
      "c": "Unpredictable",
      "d": "Sometimes synchronous and sometimes asynchronous"
    },
    "correctAnswer": "a",
    "explanations": {
      "a": "Correct. The reset signal operates independently of the clock, making it asynchronous.",
      "b": "Incorrect. The reset is not synchronized with the clock in the figure.",
      "c": "Incorrect. The reset operation is defined, not unpredictable.",
      "d": "Incorrect. The reset does not switch between synchronous and asynchronous."
    },
    "difficulty": "advanced"
  },
  {
    "question": "8. What is the similar system task in verilog as printf in C?",
    "answers": {
      "a": "$monitor",
      "b": "$display",
      "c": "$print",
      "d": "All of these"
    },
    "correctAnswer": "c",
    "explanations": {
      "a": "Incorrect. $monitor displays values continuously, not formatted output like printf.",
      "b": "Incorrect. $display provides output but does not support formatted output like printf.",
      "c": "Correct. $print provides formatted output similar to printf in C.",
      "d": "Incorrect. Only $print provides formatted output similar to printf."
    },
    "difficulty": "intermediate"
  },
  {
    "question": "9. In the figure given in ques7, tell whether it is a positive edge reset or negative edge?",
    "answers": {
      "a": "Both positive and negative edge reset",
      "b": "Negative edge reset",
      "c": "Positive edge",
      "d": "Unpredictable"
    },
    "correctAnswer": "a",
    "explanations": {
      "a": "Correct. The reset is activated on both positive and negative edges in the figure.",
      "b": "Incorrect. The reset is not limited to only the negative edge.",
      "c": "Incorrect. The reset is not limited to only the positive edge.",
      "d": "Incorrect. The reset operation is defined, not unpredictable."
    },
    "difficulty": "advanced"
  },
  {
    "question": "10. Can we include one source file in another in verilog?",
    "answers": {
      "a": "No",
      "b": "Yes using `include",
      "c": "Yes using `define",
      "d": "Yes by just writing the name of file in another file"
    },
    "correctAnswer": "c",
    "explanations": {
      "a": "Incorrect. Verilog allows inclusion of one source file in another using directives.",
      "b": "Incorrect. `include is used for file inclusion, but not the only way.",
      "c": "Correct. `define can be used for macros and file inclusion in Verilog.",
      "d": "Incorrect. You cannot include a file by just writing its name; a directive is required."
    },
    "difficulty": "beginner"
  }
]
